<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config/>

	<!-- import the hibernate related beans -->
	<import resource="spring-hibernate.xml" />
	<import resource="quartz-jobs.xml" />

	<bean id="ca.hec.tenjin.api.SyllabusService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />

		<property name="target">
			<bean class="ca.hec.tenjin.impl.SyllabusServiceImpl">
				<!-- API injection -->
				<property name="syllabusDao" ref="ca.hec.tenjin.api.dao.SyllabusDao" />
				<property name="templateService" ref="ca.hec.tenjin.api.TemplateService" />
				<property name="sakaiProxy" ref="ca.hec.tenjin.api.SakaiProxy" />
				<property name="securityService" ref="ca.hec.tenjin.api.TenjinSecurityService" />
				<property name="syllabusLockService" ref="ca.hec.tenjin.api.SyllabusLockService" />
			</bean>
		</property>

		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="ca.hec.tenjin.api.SyllabusLockService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />

		<property name="target">
			<bean class="ca.hec.tenjin.impl.SyllabusLockServiceImpl">
				<!-- API injection -->
				<property name="syllabusDao" ref="ca.hec.tenjin.api.dao.SyllabusDao" />
				<property name="syllabusLockDao" ref="ca.hec.tenjin.api.dao.SyllabusLockDao" />
				<property name="sakaiProxy" ref="ca.hec.tenjin.api.SakaiProxy" />
				<property name="securityService" ref="ca.hec.tenjin.api.TenjinSecurityService" />
			</bean>
		</property>
		
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<bean id="ca.hec.tenjin.api.SyllabusServiceEntityProvider" class="ca.hec.tenjin.impl.SyllabusServiceEntityProviderImpl"
		  init-method="init">
		<property name="entityManager" ref="org.sakaiproject.entity.api.EntityManager"/>
		<property name="syllabusService" ref="ca.hec.tenjin.api.SyllabusService" />
		<property name="syllabusDao" ref="ca.hec.tenjin.api.dao.SyllabusDao" />
		<property name="sakaiProxy" ref="ca.hec.tenjin.api.SakaiProxy" />

	</bean>

	<bean id="ca.hec.tenjin.api.PublishService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />

		<property name="target">
			<bean class="ca.hec.tenjin.impl.PublishServiceImpl">
				<!-- API injection -->
				<property name="publishedSyllabusDao" ref="ca.hec.tenjin.api.dao.PublishedSyllabusDao" />
				<property name="syllabusDao" ref="ca.hec.tenjin.api.dao.SyllabusDao" />
				<property name="syllabusService" ref="ca.hec.tenjin.api.SyllabusService" />
				<property name="sakaiProxy" ref="ca.hec.tenjin.api.SakaiProxy" />
				<property name="securityService" ref="ca.hec.tenjin.api.TenjinSecurityService" />
				<property name="syllabusLockService" ref="ca.hec.tenjin.api.SyllabusLockService" />
			</bean>
		</property>

		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="ca.hec.tenjin.api.TemplateService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />

		<property name="target">
			<bean class="ca.hec.tenjin.impl.TemplateServiceImpl">
				<!-- API injection -->
				<property name="templateDao" ref="ca.hec.tenjin.api.dao.TemplateDao" />
			</bean>
		</property>

		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="ca.hec.tenjin.api.TenjinSecurityService" class="ca.hec.tenjin.impl.TenjinSecurityServiceImpl">
		<property name="sakaiProxy" ref="ca.hec.tenjin.api.SakaiProxy" />
	</bean>

	<bean id="ca.hec.tenjin.api.provider.TenjinDataProvider" class="ca.hec.tenjin.impl.provider.TenjinDataProviderImpl">

	</bean>
	
	<bean id="ca.hec.tenjin.api.ExportService" class="ca.hec.tenjin.impl.ExportServiceImpl">
		<property name="sakaiProxy" ref="ca.hec.tenjin.api.SakaiProxy" />
		<property name="tenjinDataProvider" ref="ca.hec.tenjin.api.provider.TenjinDataProvider" />
	</bean>
	
	<bean id="ca.hec.tenjin.api.SamigoToolEntityProvider" class="ca.hec.tenjin.impl.provider.tool.SamigoToolEntityProviderImpl">
		<property name="publishedAssessmentEntityProvider" ref="org.sakaiproject.tool.assessment.entity.api.PublishedEntityProvider" />
		<property name="persistenceService" ref="PersistenceService" />
	</bean>
	
	<bean id="ca.hec.tenjin.api.AssignmentToolEntityProvider" class="ca.hec.tenjin.impl.provider.tool.AssignmentToolEntityProviderImpl">
		<property name="assignmentService" ref="org.sakaiproject.assignment.api.AssignmentService" />
	</bean>
	
	<bean name="ca.hec.tenjin.api.SakaiProxy" class="ca.hec.tenjin.impl.SakaiProxyImpl" init-method="init">
		<!-- <property name="courseManagementService"><ref bean="org.sakaiproject.coursemanagement.api.CourseManagementService"/></property> -->
		<!-- <property name="groupProvider"><ref bean="org.sakaiproject.authz.api.GroupProvider"/></property> -->
		<!-- <property name="privacyManager"><ref bean="org.sakaiproject.api.privacy.PrivacyManager"/></property> -->
		<!-- <property name="connectionsLogic"><ref bean="org.sakaiproject.profile2.logic.ProfileConnectionsLogic"/></property> -->
		<!-- <property name="serverConfigurationService"><ref bean="org.sakaiproject.component.api.ServerConfigurationService"/></property> -->
		<property name="securityService">
			<ref bean="org.sakaiproject.authz.api.SecurityService" />
		</property>

		<property name="eventTrackingService">
			<ref bean="org.sakaiproject.event.api.EventTrackingService" />
		</property>

		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>

		<property name="siteService">
			<ref bean="org.sakaiproject.site.api.SiteService" />
		</property>

		<property name="toolManager">
			<ref bean="org.sakaiproject.tool.api.ToolManager" />
		</property>

		<property name="functionManager">
			<ref bean="org.sakaiproject.authz.api.FunctionManager" />
		</property>

		<property name="userDirectoryService">
			<ref bean="org.sakaiproject.user.api.UserDirectoryService" />
		</property>

		<property name="preferencesService">
			<ref bean="org.sakaiproject.user.api.PreferencesService"/>
		</property>

		<property name="contentHostingService">
			<ref bean="org.sakaiproject.content.api.ContentHostingService" />
		</property>

		<property name="groupService">
			<ref bean="org.sakaiproject.authz.api.AuthzGroupService" />
		</property>
		
		<property name="citationService">
			<ref bean="org.sakaiproject.citation.api.CitationService" />
		</property>
		
		<property name="serverConfigurationService">
			<ref bean="org.sakaiproject.component.api.ServerConfigurationService" />
		</property>
		
		<property name="timeService">
			<ref bean="org.sakaiproject.time.api.TimeService" />
		</property>
		
		<property name="entityManager">
			<ref bean="org.sakaiproject.entity.api.EntityManager" />
		</property>
	</bean>

</beans>
